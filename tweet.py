# Tweet.py: This module accepts tweets a statment that is passed to it. It accepts the 'api' object (generated by
#  'init_twitter_api.py') as a required argument (which is used to access the 'tweepy'/Twitter API, and it accepts N
#  number of additional string-formatted arguments, which it will then concatenate and tweet.
# 0.0) Prerequisites
#    0.1) Python Dependencies:
#        0.1.a) Python package 'tweepy' shall be installed into the active Python environment (e.g., by running
#                'pip install tweepy' in the environment's terminal window).
#                Tweepy API definition: 'http://docs.tweepy.org/en/latest/api.html'
#        0.1.b) Python module 'init_twitter_api.py' shall be present in the active Python environment path (possibly in
#               a Common directory, since this module is used in other unrelated Projects). This module accepts
#               JSON-formatted Twitter credentials (key:values), and returns a usable Twitter API.
#    0.2) Configuration Dependencies:
#        0.2.a) Twitter: The target Twitter account shall be properly setup for app access, with the proper access
#                credentials. For more information, see documentation for the 'init_twitter_api.py' module and these
#                websites for tips/reference:
#                'http://stackabuse.com/accessing-the-twitter-api-with-python/',
#                'http://nodotcom.org/python-twitter-tutorial.html'.
# 1.0) Run-time notes:
#   1.1) Usage:
#       1.1.1) standalone?: No.
#       1.1.2) call from another module?: Yes, by doing the following from the calling module:
#               >>> import tweet
#               >>> requested_tweet = <string-formatted_values>
#               >>> tweet.post_tweet(api,requested_tweet)
# 2.0) Changelog:
#       Version 1.0: Original version.


def post_tweet(api,*argv):  # accepts 'api' (for tweepy/Twitter API interface) and N number of statements ('*argv')
    import tweepy
    from time import strftime  # needed for current time
    tweet = "" # initialize tweet to be an empty string
    try:
        for arg in argv:            # for every statement passed to the module,...
            tweet = tweet + arg     # ...append the statement to the empty string
        api.update_status(status=tweet)  # Tweet the full statement
        print(strftime("%Y-%m-%d %H:%M:%S") + ' - Successfully tweeted: ' + str(tweet))  # display tweet on screen
    except tweepy.error.TweepError as error:
        if error.api_code == 187:  # This is the tweepy error code returned when Twitter detects a duplicate Tweet
            print(strftime("%Y-%m-%d %H:%M:%S") + ' - TweepError prevented DUPLICATE tweet (error #187): ' + str(tweet))
        else:
            print(strftime("%Y-%m-%d %H:%M:%S") + ' - TweepError prevented tweet: ' + str(tweet))
        pass